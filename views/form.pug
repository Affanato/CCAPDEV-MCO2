extends layout.pug

block content
    style.

      
      .form-container {
        background: white;
        padding: 30px;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
      }
      
      .step {
        display: none;
      }
      
      .step.active {
        display: block;
      }
      
      h2 {
        color: #333;
        margin-bottom: 20px;
      }
      
      .dropdown-group {
        margin: 20px 0;
      }
      
      .dropdown-group label {
        display: block;
        margin-bottom: 8px;
        font-weight: bold;
        color: #555;
      }
      
      .dropdown-group select {
        width: 100%;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 16px;
        background-color: white;
        cursor: pointer;
      }
      
      .dropdown-group select:focus {
        outline: none;
        border-color: #007bff;
        box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);
      }
      
      .btn {
        background-color: #007bff;
        color: white;
        padding: 12px 24px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
        margin-top: 20px;
        transition: background-color 0.3s;
      }
      
      .btn:hover {
        background-color: #0056b3;
      }
      
      .btn:disabled {
        background-color: #ccc;
        cursor: not-allowed;
      }
      
      .btn-back {
        background-color: #6c757d;
        margin-right: 10px;
      }
      
      .btn-back:hover {
        background-color: #545b62;
      }
      
      .time-table {
        margin-top: 20px;
        border-collapse: collapse;
        width: 100%;
        background: white;
      }
      
      .time-table th,
      .time-table td {
        border: 1px solid #ddd;
        padding: 8px;
        text-align: center;
        cursor: pointer;
        transition: background-color 0.3s;
      }
      
      .time-table th {
        background-color: #f8f9fa;
        font-weight: bold;
        cursor: default;
      }
      
      .time-table td:hover {
        background-color: #e9ecef;
      }
      
      .time-table td.selected {
        background-color: #28a745 !important;
        color: white;
      }
      
      .time-table td:first-child {
        font-weight: bold;
        background-color: #f8f9fa;
        cursor: default;
      }
      
      .time-table td:first-child:hover {
        background-color: #f8f9fa;
      }
      
      .selection-info {
        margin-top: 20px;
        padding: 15px;
        background-color: #e7f3ff;
        border-radius: 5px;
        border-left: 4px solid #007bff;
      }

    .form-container
      //- Step 1: Location Selection
      .step.active#step1
        h2 Step 1: Select Location
        
        .dropdown-group
          label(for="building_select")
          select#building_select(name="building_select" onchange="checkNextButton()")
            option(value="Building") Select building
            option(value="A") A
            option(value="B") B
            option(value="C") C
        
        .dropdown-group
          label(for="room_select")
          select#room_select(name="room_select" onchange="checkNextButton()")
            option(value="") Select room
            option(value="GK101") GK101
            option(value="GK102") GK102
            option(value="GK103") GK103
            option(value="GK104") GK104
            option(value="GK105") GK105
        
        button.btn#next-btn(onclick="nextStep()" disabled) Next
      
      //- Step 2: Time Selection
      .step#step2
        h2 Step 2: Select Time Slot
        
        .selection-info
          strong Selected Location: 
          span#selected-location
        
        table.time-table#time-table
          thead
            tr
              th Row
              - const timeSlots = ['7:00 AM', '7:30 AM', '8:00 AM', '8:30 AM', '9:00 AM', '9:30 AM', '10:00 AM', '10:30 AM', '11:00 AM', '11:30 AM', '12:00 PM', '12:30 PM', '1:00 PM', '1:30 PM', '2:00 PM', '2:30 PM', '3:00 PM', '3:30 PM', '4:00 PM', '4:30 PM', '5:00 PM', '5:30 PM', '6:00 PM', '6:30 PM', '7:00 PM', '7:30 PM', '8:00 PM', '8:30 PM', '9:00 PM']
              each timeSlot in timeSlots
                th= timeSlot
          tbody#table-body
        
        button.btn.btn-back(onclick="prevStep()") Back
        button.btn(onclick="submitForm()") Submit

    script.
      let selectedCells = [];
      
      function checkNextButton() {
        const buildingSelect = document.getElementById('building_select');
        const roomSelect = document.getElementById('room_select');
        const nextBtn = document.getElementById('next-btn');
        
        // Enable next button if at least one dropdown has a selection
        nextBtn.disabled = !(buildingSelect.value || roomSelect.value);
      }
      
      // Add event listeners when page loads
      document.addEventListener('DOMContentLoaded', function() {
        // Create table rows
        createTableRows();
      });
      
      function createTableRows() {
        const tableBody = document.getElementById('table-body');
        
        for (let i = 1; i <= 8; i++) {
          const row = document.createElement('tr');
          
          // Row label
          const rowLabel = document.createElement('td');
          rowLabel.textContent = `Row ${i}`;
          row.appendChild(rowLabel);
          
          // Time slots (29 slots from 7:00 AM to 9:00 PM)
          for (let j = 1; j <= 29; j++) {
            const cell = document.createElement('td');
            cell.dataset.row = i;
            cell.dataset.col = j;
            cell.addEventListener('click', function() {
              selectCell(this);
            });
            row.appendChild(cell);
          }
          
          tableBody.appendChild(row);
        }
      }
      
      function selectCell(clickedCell) {
        const row = parseInt(clickedCell.dataset.row);
        const col = parseInt(clickedCell.dataset.col);
        
        // Find all cells in the same row
        const rowCells = document.querySelectorAll(`td[data-row="${row}"]`);
        
        // Remove selection from all cells in the row
        rowCells.forEach(cell => {
          cell.classList.remove('selected');
        });
        
        // Add selection to clicked cell and all cells to its left
        rowCells.forEach(cell => {
          if (parseInt(cell.dataset.col) == col || (parseInt(cell.dataset.col)) == col+1 || (parseInt(cell.dataset.col)) == col-1) {
            cell.classList.add('selected');
          }
        });
        
        // Update selected cells array for this row
        selectedCells[row] = col;
      }
      
      function nextStep() {
        const buildingSelect = document.getElementById('building_select');
        const roomSelect = document.getElementById('room_select');
        
        if (buildingSelect.value || roomSelect.value) {
          // Update selected location display
          let selectedLocation = '';
          if (buildingSelect.value && roomSelect.value) {
            selectedLocation = `Building: ${buildingSelect.value}, Room: ${roomSelect.value}`;
          } else if (buildingSelect.value) {
            selectedLocation = `Building: ${buildingSelect.value}`;
          } else if (roomSelect.value) {
            selectedLocation = `Room: ${roomSelect.value}`;
          }
          
          document.getElementById('selected-location').textContent = selectedLocation;
          
          // Hide step 1, show step 2
          document.getElementById('step1').classList.remove('active');
          document.getElementById('step2').classList.add('active');
        }
      }
      
      function prevStep() {
        document.getElementById('step2').classList.remove('active');
        document.getElementById('step1').classList.add('active');
      }
      
      function submitForm() {
        const buildingSelect = document.getElementById('building_select');
        const roomSelect = document.getElementById('room_select');
        
        let bookingData = {
          building: buildingSelect.value || null,
          room: roomSelect.value || null,
          time_slots: selectedCells
        };
        
        alert('Form submitted! Check console for booking data.');
        console.log('Booking Data:', bookingData);
      }